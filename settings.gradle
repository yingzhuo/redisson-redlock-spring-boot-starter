pluginManagement {
	repositories {
		mavenLocal()

		file('config/maven/repositories.txt')
			.readLines()
			.forEach { line ->
				line = line.trim()
				if (!line.isBlank() && !line.startsWith('#')) {
					maven { url = uri(line.trim()); allowInsecureProtocol = true }
				}
			}

		gradlePluginPortal()
		mavenCentral()
		google()
	}
}

plugins {
	id 'io.spring.dependency-management' version "$dependencyManagementPluginVersion" apply false
	id 'io.gitee.pkmer.pkmerboot-central-publisher' version "$mavenCentralPublisherPluginVersion" apply false
}

dependencyResolutionManagement {
	repositories {
		mavenLocal()

		file('config/maven/repositories.txt')
			.readLines()
			.forEach { line ->
				line = line.trim()
				if (!line.isBlank() && !line.startsWith('#')) {
					maven { url = uri(line.trim()); allowInsecureProtocol = true }
				}
			}

		mavenCentral()
		google()
	}
}

rootProject.name = 'redisson-redlock-spring-boot-starter'
